# GrowDesk V2 Docker Compose

services:
  # GrowDesk Core Services
  postgres:
    image: postgres:15
    container_name: growdesk-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: growdesk
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./GrowDesk/backend/internal/db/schema.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - grow-network

  redis:
    image: redis:7
    container_name: growdesk-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - grow-network

  backend:
    build:
      context: ./GrowDesk/backend
      dockerfile: Dockerfile
    container_name: growdesk-backend
    ports:
      - "8080:8080"
    networks:
      - grow-network
    environment:
      - PORT=8080
      - DATA_DIR=/app/data
      - MOCK_AUTH=true
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=growdesk
      - USE_POSTGRES=true
      - MIGRATE_DATA=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SYNC_SERVICE_URL=http://sync-server:8000/api/sync
    volumes:
      - backend_data:/app/data
      - ./GrowDesk/backend/.env:/app/.env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  sync-server:
    build:
      context: ./GrowDesk/backend
      dockerfile: Dockerfile
    container_name: growdesk-sync-server
    command: ["/bin/sh", "-c", "cd /app && go build -o /tmp/sync-server ./cmd/sync-server && /tmp/sync-server"]
    ports:
      - "8000:8000"
    volumes:
      - backend_data:/app/data
      - ./GrowDesk/backend/data:/backend/data
      - ./GrowDesk/backend/.env:/app/.env
    environment:
      - PORT=8000
      - DATA_DIR=/app/data
      - LOCAL_DATA_DIR=/backend/data
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=growdesk
      - USE_POSTGRES=true
    networks:
      - grow-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_started

  frontend:
    build:
      context: ./GrowDesk/frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: growdesk-frontend
    ports:
      - "3001:3000"
    volumes:
      - ./GrowDesk/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:8080/api
      - VITE_SYNC_API_URL=http://localhost:8080/api/sync/users
      - HOST=0.0.0.0
      - PORT=3000
    networks:
      - grow-network
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started

  # GrowDesk Widget Services
  widget-api:
    build:
      context: ./GrowDesk-Widget/widget-api
      dockerfile: Dockerfile
    container_name: growdesk-widget-api
    ports:
      - "3000:3000"
    volumes:
      - ./GrowDesk-Widget/widget-api:/app
      - ./GrowDesk-Widget/widget-api/data:/app/data
      - ./GrowDesk-Widget/.env:/app/.env
    environment:
      - PORT=3000
      - DATA_DIR=/app/data
      - GROWDESK_API_URL=http://backend:8080
      - GROWDESK_API_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySUQiOiJhZG1pbi0xMjMiLCJlbWFpbCI6ImFkbWluQGdyb3dkZXNrLmNvbSIsInJvbGUiOiJhZG1pbiIsImV4cCI6MTcyNDA4ODQwMH0.8J5ayPvA4B-1vF5NaqRXycW1pmIl9qjKP6Ddj4Ot_Cw
      - WIDGET_BASE_URL=http://widget-core:3030
      - WIDGET_API_URL=http://widget-api:3000
      - GIN_MODE=debug
      - JWT_SECRET=clave_secreta_desarrollo_local
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:3030,http://localhost:8090
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=growdesk
      - USE_POSTGRES=true
      - MIGRATE_DATA=true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 40s
    networks:
      - grow-network
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_started

  widget-core:
    build:
      context: ./GrowDesk-Widget/widget-core
      dockerfile: Dockerfile
    container_name: growdesk-widget-core
    ports:
      - "3030:3030"
    volumes:
      - ./GrowDesk-Widget/widget-core:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3030
      - WIDGET_API_URL=http://widget-api:3000
    restart: unless-stopped
    networks:
      - grow-network
    depends_on:
      widget-api:
        condition: service_started

  demo-site:
    build:
      context: ./GrowDesk-Widget/examples/simple-demo
      dockerfile: Dockerfile
    container_name: growdesk-demo-site
    ports:
      - "8090:8090"
    volumes:
      - ./GrowDesk-Widget/examples/simple-demo:/app
      - /app/node_modules
    depends_on:
      widget-core:
        condition: service_started
      widget-api:
        condition: service_started
    environment:
      - PORT=8090
      - NODE_ENV=development
      - WIDGET_CORE_URL=http://widget-core:3030
      - WIDGET_API_URL=http://widget-api:3000
    restart: unless-stopped
    networks:
      - grow-network

networks:
  grow-network:
    driver: bridge

volumes:
  postgres_data:
  backend_data:
  backend_uploads: 